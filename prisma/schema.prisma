// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         Int         @id @default(autoincrement())
  firstName  String      @map("first_name")
  lastName   String      @map("last_name")
  email      String      @unique
  address    String
  birthday   DateTime
  role       String      @default("USER")
  password   String
  savingPlan SavingPlan?
  budgets    Budgets[]
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  deletedAt  DateTime?   @map("deleted_at")

  @@map("users")
}

model Destinations {
  id                Int       @id @default(autoincrement())
  destinationPlace  String    @map("destination_place")
  language          String
  estimatedLifeCost Int       @map("estimated_cost")
  budget            Budgets[]
  createdAt         DateTime  @default(now()) @map("created_at")
  updatedAt         DateTime  @updatedAt @map("updated_at")
  deletedAt         DateTime? @map("deleted_at")

  @@map("destinations")
}

model SavingPlan {
  id               Int       @id @default(autoincrement())
  userID           Int       @unique @map("user_id")
  User             Users     @relation(fields: [userID], references: [id])
  depositPeriod    String    @map("deposit_period")
  fixedAmount      Int       @map("fixed_amount")
  extraAmount      Int?      @map("extra_amount")
  cumulativeAmount Int       @map("cumulative_amount")
  budgets          Budgets[]
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")
  deletedAt        DateTime? @map("deleted_at")

  @@map("saving_plan")
}

model Budgets {
  id                   Int          @id @default(autoincrement())
  destinationID        Int          @unique @map("destination_id")
  Destination          Destinations @relation(fields: [destinationID], references: [id])
  amountToReach        Int          @map("amount_to_reach")
  assignedSavingAmount Int          @map("assigned_saving_amount")
  currentAmount        Int          @map("current_amount")
  remainingAmount      Int          @map("remaining_amount")
  priorityLevel        String       @map("priority_level")
  timeFrame            DateTime?    @map("time_frame")
  userID               Int          @map("user_id")
  User                 Users        @relation(fields: [userID], references: [id])
  savingPlanID         Int          @map("saving_plan_id")
  SavingPlan           SavingPlan   @relation(fields: [savingPlanID], references: [id])
  createdAt            DateTime     @default(now()) @map("created_at")
  updatedAt            DateTime     @updatedAt @map("updated_at")
  deletedAt            DateTime?    @map("deleted_at")

  @@map("budgets")
}
